#include <iostream>
#include <stack>

using namespace std;

int gdc(int a, int b) {//Евклид
    if (a < b)
        swap(a, b);
    int c = a % b;
    if (c == 0)
        return b;
    return gdc(b, c);
}

stack<pair<int, int>> s1, s2;
int n, k, ans = 1, mini_ans, a, maxima;//в а мы будем считывать значения, mini_ans-промежуточный ответ

void del_element() {//удаление элемента и нахождение нода
    int element;
    if (s2.empty()) {
        while (!s1.empty()) {
            element = s1.top().first;
            s1.pop();
            maxima = s2.empty() ? element : gdc(element, s2.top().second);
            s2.push(make_pair(element, maxima));
        }
    }
    s2.pop();
    mini_ans = s2.top().second;
    while (!s2.empty()) {
        element = s2.top().first;
        s2.pop();
        maxima = s1.empty() ? element : gdc(element, s1.top().second);
        s1.push(make_pair(element, maxima));
    }
}

void add_element(int element) {//добавить элемент
    maxima = s1.empty() ? element : gdc(element, s1.top().second);
    s1.push({ element, gdc(element, maxima) });
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> n >> k;
    for (int i = 0; i < k; i++) {//считываем первое окно
        cin >> a;
        add_element(a);
    }
    ans = s1.top().second;
    for (int i = 0; i < n - k; i++) {//считываем всё остальное 
        cin >> a;
        add_element(a);
        del_element();
        if (mini_ans > ans)//подбираем наибольший нод
            ans = mini_ans;
    }
    cout << ans;
}
